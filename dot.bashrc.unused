# Q pre block. Keep at the top of this file.
[[ -f "${HOME}/Library/Application Support/amazon-q/shell/bashrc.pre.bash" ]] && builtin source "${HOME}/Library/Application Support/amazon-q/shell/bashrc.pre.bash"
#complete -C aws_completer aws

# Setting PATH for Python 3.6
# The original version is saved in .bash_profile.pysave
#PATH="/Library/Frameworks/Python.framework/Versions/3.6/bin:${PATH}"
#export PATH

# Brew installation
	#Next steps:
		#⁃	To add Homebrew to your PATH, add to your shell profile (e.g. ~/.bash_profile or ~/.zprofile):
		#⁃	eval "$(/opt/homebrew/bin/brew shellenv)" on Apple Silicon
		#⁃	eval "$(/usr/local/bin/brew shellenv)" on Intel
		#⁃	Run brew help to get started
#eval "$(/opt/homebrew/bin/brew shellenv)"


# Edit this file
alias profile='code ~/.bash_profile'
alias profilerc='code ~/.bashrc'
alias reloadb='source ~/.bash_profile'
alias reloadp=reloadb
alias r=reloadb
alias rz='source ~/.zshrc'

## Lazy shortcuts
alias c='clear'
alias p='pwd'
alias speedtest='networkquality'
alias activity='top -o rsize'


# Update tools

# Error: Permission denied @ apply2files - /usr/local/lib/docker/cli-plugins
	# https://github.com/Homebrew/homebrew-core/issues/45009#issuecomment-543795948
		# sudo chown -R $(whoami):admin /usr/local/* && sudo chmod -R g+rwx /usr/local/*

alias updatebrew='brew update && brew upgrade'
alias cleanupbrew='brew cleanup'
#alias updatesfdx='sfdx update'
# alias updatesf='sf update'
alias updatesf='npm update --global @salesforce/cli' # March 18 2024
alias updateheroku='heroku update'
alias updatetools='updatebrew && updatesf && updateheroku && cciv'
alias updateall='updatetools'


# GH Cli
alias installgh='brew install gh'
alias authgithub_read='gh auth login --hostname github.com --web --scopes read:packages'
alias ghorglist='gh org list'

# Docker
alias dockerauthgh='echo $(gh auth token) | docker login ghcr.io -u paull10au_sfemu --password-stdin'
alias dockerbaseemu='docker pull ghcr.io/sfdc-qbranch-emu/qbrix-base-container-quasar:latest'
# alias dockerbase='docker pull ghcr.io/sfdc-qbranch/qbrix-base-container-quasar:latest'
alias dockerbase='docker pull ghcr.io/sfdc-qbranch-emu/qbrix-base-container-quasar:latest'



# SETUP DEMO BRIX ENVIRONMENT

# 	deactivatecci
#	reinstallcci2
# 	activatecci
# 	installbrowser
#	installqx 			**	Make sure you are on Zscaler
# 	updateqx

# Test environment
# 		cci org list
# 		cci flow run deploy_qbrix


# Playwright
 alias installplaywright='npx playwright install'
 alias initplaywright='npm init playwright@latest'


# Cumulus CI / CCI
alias cciv='cci version'
alias cciversion=cciv


# *** Recreate CumulusCI Pipx Environment from scratch
alias deletecci='delete  ~/.local/pipx/venvs/cumulusci'
alias pipxcciqsr='pipx install "cumulusci @ git+https://github.com/sfdc-qbranch-emu/CumulusCI.git@quasar" --force' #  install location is ~/.local/pipx/venvs
alias activatecci='source ~/.local/pipx/venvs/cumulusci/bin/activate'
alias installqxcli='activatecci && python3 -m pip install "qbrix-cli @ git+https://github.com/sfdc-qbranch-emu/qbrix_cli.git@main"' # pip install into pipx venv
alias updateprotobuf='python3 -m pip install protobuf==5.28.1 --force --no-deps' # may need to run the command, not the alias
alias initrfbrowser='rfbrowser init' # [ ERROR ] Error in file '/Users/plucas/.local/pipx/venvs/cumulusci/lib/python3.12/site-packages/qx/qrobot/keywords/QRobot.resource' on line 3: Initializing library 'Browser' with no arguments failed: Could not find node dependencies in installation directory `/Users/plucas/.local/pipx/venvs/cumulusci/lib/python3.12/site-packages/Browser/wrapper.` Run `rfbrowser init` to install the dependencies.



# alias installcci='pip3 install cumulusci'
alias installcci='pipx install cumulusci' # *** Installs in  ~/.local/pipx/venvs but we are using the q brix version above

alias reinstallcci='pipx reinstall cumulusci'
alias reinstallcci2='uninstallcci && installcci'
alias updatecci='pipx upgrade cumulusci'
alias upgradecci=reinstallcci2
alias deactivatecci='deactivate'
#If you’ve installed a major new version of Python—e.g., you already have Python 3.10 and you now install Python 3.11 
#alongside it—you’ll need to create a new virtual environment that specifically uses the new major point version. 
#Do not attempt to upgrade an existing virtual environment to a higher major point version of Python.

    # *** I'm on mac, and homebrew upgrades my python all the time. All my pipx packages are easily fixed when this happens by:
    # - pipx reinstall-all

alias upgradeccienv='deactivatecci && python3 -m venv ~/.local/pipx/venvs/cumulusci/bin/activate --upgrade'
alias uninstallcci='pipx uninstall cumulusci'


# Python
alias python=python3
#alias python=python3.12
alias py=python
alias upgradepip='python3.12 -m pip install --upgrade pip'
alias updatepip='upgradepip'
alias updateproto='python3 -m pip install protobuf==5.28.1 --force --no-deps'

# Error in file '/Users/plucas/Paull/Q Branch/Q Brix/emu/DemoBrix-6-xDO-DataCloud-MultiOrg-Home/.cci/projects/QBrix-6-SDO-DataCloud-PostSpin/robot/DataCloudRobot.robot' on line 3: Importing library '/Users/plucas/Paull/Q Branch/Q Brix/emu/DemoBrix-6-xDO-DataCloud-MultiOrg-Home/.cci/projects/QBrix-6-SDO-DataCloud-PostSpin/robot/DataCloudRobot.py' failed: ModuleNotFoundError: No module named 'Browser'
alias installbrowser='cci robot install_playwright'
alias installpandas='pip install pandas'
alias installpandasql='pip install -U pandasql'
alias installccidependencies='pip install --upgrade pandas pandasql robotframework-browser'

alias listpipx='pipx list'
alias listpip='pip list'

alias newvenv='python3 -m venv /Users/plucas/.local/pipx/venvs/xxx' # or you can specify the version of python you want installed in this venv


# pipx
# brew install pipx
# pipx ensurepath
# sudo pipx ensurepath --global # optional to allow pipx actions with --global argument

alias upgradepipx='brew update && brew upgrade pipx'


# QX
## Run activatecci before installing
alias upgradegcm='brew upgrade --cask git-credential-manager'
alias installqx='activatecci && python3 -m pip install "qbrix-cli @ git+https://github.com/sfdc-qbranch-emu/qbrix_cli.git@main"'
alias updateqx='qx update'
alias qxupdate='qx update'
alias qxu=qxupdate

# Browser
alias initrfbrowser='rfbrowser init'


# Listing
alias ll='ls -l'
alias lsa='ls -al'

# Frequently used directories - Defined in fig dotfile aliases
# alias qbranch='cd ~/Paull/Q\ Branch/Q\ Brix/'
# alias qbrix='cd ~/Paull/Q\ Branch'
alias dotfiles='cd ~/.dotfiles'
alias emu='cd ~/Paull/Q\ Branch/Q\ Brix/emu'
alias qtools='cd ~/Paull/Q\ Branch/Q\ Tools'
alias sfdx='cd ~/Paull/_sfdx'


# Parent directory
alias cd..='cd ..'
alias cd,,='cd ..'

## a quick way to get out of current directory
alias ..='cd ..'
alias ...='cd ../../../'
alias ....='cd ../../../../'
alias .....='cd ../../../../'
alias .4='cd ../../../../'
alias .5='cd ../../../../..'

# sfdx aliases
# from https://gist.github.com/dcarroll/6b0b243c7bc4641e73da9bb77552e67d
alias sstatus='(sfdx force:org:list &
			   sfdx force:alias:list & 
			   sfdx force:config:list; wait)'

alias sorglist='sfdx force:org:list'
alias sorglistc='sfdx force:org:list --clean -p'
alias spush='sfdx force:source:push'
alias spull='sfdx force:source:pull'
alias sopen='sfdx force:org:open -u'
alias sauth='sfdx force:auth:web:login -a'

## Helper functions
runningport() 
{
	if [ "$#" = 0 ]; then
		echo "Which port?"
		read port
	fi

	qry="lsof -i tcp:$port"

	# Debug
	echo Executing [ $qry ]
	
	# Execute
	eval $qry

	# parse output
	# node    19850 plucas   28u  IPv4 0x4ecc179913261039      0t0  TCP localhost:fj-hdnet (LISTEN)

	# https://kellyjonbrazil.github.io/jc/docs/parsers/lsof.html
	
	# https://gist.github.com/manics/f51afa3b924d80980ea9de779ad8b353
	# rs = []
	# pid = -1
	# cmd = ''
	# user = ''
	# for line in sys.stdin:
	#     k = line[0]
	#     v = line[1:].rstrip('\n')
	#     if k == 'p':
	#         pid = int(v)
	#         user = ''
	#         cmd = ''
	#     if k == 'L':
	#         user = v
	#     if k == 'c':
	#         cmd = v
	#     if k == 'n':
	#         obj = v
	#         print('%d\t%s\t%s\t%s' % (pid, user, cmd, obj))


	#eval kill -9 pid
}


mkcdir ()
{
    mkdir -p -- "$1" &&
      cd -P -- "$1"
}

## Metadata API retrieve
smdapiretrieve() {

	# Variables
	manifestFilePath='flgnew/package.xml'
	retrieveTargetDirectory='flgnew/mdapi/retrieve'
	alias='flgnew'

	## TODO: Default to 

	if [ "$#" = 0 ]; then
		echo "Path to the manifest file, eg. $manifestFilePath"
		read manifestFilePath
		echo "Retrieve target directory, eg. $retrieveTargetDirectory"
		read retrieveTargetDirectory
		echo "Target user alias, eg. $alias"
		read alias

		echo ">>>>> smdapiretrieve $manifestFilePath $retrieveTargetDirectory $alias"
	elif [ "$#" != 3 ] && [ "$#" != 0]; then
		echo "Please provide the following 3 parameters: 'Path to the manifest file, eg. $manifestFilePath', 'Retrieve target directory, eg. $retrieveTargetDirectory', 'Target user alias, eg. $alias'"
		echo ">>>>> smdapiretrieve $manifestFilePath $retrieveTargetDirectory $alias"
		return 1
	elif [ "$#" = 3 ]; then	
		manifestFilePath=$1
		retrieveTargetDirectory=$2
		alias=$3
	fi
    
	qry="sfdx force:mdapi:retrieve -k $manifestFilePath -s -r $retrieveTargetDirectory -u $alias -w -1"

	# Debug
	echo Executing [ $qry ]
	
	# Execute
	eval $qry
}

## Metadata API deploy
smdapideploy() {

	# Variables
	deployDirectory='flgnew/mdapi/retrieve/unpackaged'
	alias='flgnew'
	
	if [ "$#" != 2 ]; then
		echo "Please provide the following 2 parameters: 'Path to the deploy directory , eg. $deployDirectory', 'Target user alias, eg. $alias'"
		echo ">>>>> smdapiretrieve $deployDirectory $alias"
		return 1
	fi
    
	qry="sfdx force:mdapi:deploy -d $1 -u $2 -w -1"

	# Debug
	echo Executing [ $qry ]
	
	# Execute
	eval $qry
}

blah() {
	# https://ryanstutorials.net/bash-scripting-tutorial/bash-input.php
	value=qwerty

	

	echo 'What is your name?'
	read name

	echo "Hi $name!"

	#echo 'What is your age?'
	#read age

	#echo "hi $name - $age"
	#read -re "$value" -p 'Please enter the value: ' value
	#IFS= read -re -i "$value" -p 'Please enter the value: ' value

	#echo $value
	#echo 'y' | docker-machine rm default
	#read "Run the cron script now?"
}


sflogout() {
	if [ "$#" = 0 ]; then
		echo "Provide the org alias"
		read alias
	else
		alias=$1
	fi
    
    sf auth logout -o $alias
}

## Default user name
sgdefaultuser() {
    sfdx force:config:get defaultusername
}

ssdefaultuser() {
	if [ "$#" = 0 ]; then
		echo "Please provide an default userid."
		return 1
	fi
    #do things with parameters like $1 such as
    sfdx force:config:set defaultusername=$1
}

sorgdel() {
	if [ "$#" = 0 ]; then
		echo "Please provide an alias or userid."
		return 1
	fi
	if [ "$#" = 1 ]; then
		sfdx force:org:delete -p -u $1
	else
		#list all the orgs to a file and then find the ones passed to the function and delete them
		sfdx force:org:list --json > orglist.json
		(for row in $(jq -r .result.scratchOrgs[].alias < orglist.json); do
			for item in $@; do
				if [ $item = $row ]; then
					sfdx force:org:delete -p -u $item &
				fi
			done
			printf ""
		done
		wait)
		rm -rf orglist.json
	fi
	return 0
}

sspassword() {
	sfdx force:user:password:generate -u $1
}

clone() {
	git clone https://github.com/$1
}

orgopen() {
	#check to see if argument(s) were passed, if not just open the default
	if [ -z "$1" ]; then
		sfdx force:org:open -p
	else
		sfdx force:org:open -u $1
	fi
	return 0
}

# Get your current public IP
alias ip='curl icanhazip.com'

txtblk='\e[0;30m' # Black - Regular
txtred='\e[0;31m' # Red
txtgrn='\e[0;32m' # Green
txtylw='\e[0;33m' # Yellow
txtblu='\e[0;34m' # Blue
txtpur='\e[0;35m' # Purple
txtcyn='\e[0;36m' # Cyan
txtwht='\e[0;37m' # White
bldblk='\e[1;30m' # Black - Bold
bldred='\e[1;31m' # Red
bldgrn='\e[1;32m' # Green
bldylw='\e[1;33m' # Yellow
bldblu='\e[1;34m' # Blue
bldpur='\e[1;35m' # Purple
bldcyn='\e[1;36m' # Cyan
bldwht='\e[1;37m' # White
unkblk='\e[4;30m' # Black - Underline
undred='\e[4;31m' # Red
undgrn='\e[4;32m' # Green
undylw='\e[4;33m' # Yellow
undblu='\e[4;34m' # Blue
undpur='\e[4;35m' # Purple
undcyn='\e[4;36m' # Cyan
undwht='\e[4;37m' # White
bakblk='\e[40m'   # Black - Background
bakred='\e[41m'   # Red
badgrn='\e[42m'   # Green
bakylw='\e[43m'   # Yellow
bakblu='\e[44m'   # Blue
bakpur='\e[45m'   # Purple
bakcyn='\e[46m'   # Cyan
bakwht='\e[47m'   # White
txtrst='\e[0m'    # Text Reset

# Git branch in prompt.
parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/git:(\1)/'
}

# Failed to commit after generating GPG token
# https://stackoverflow.com/questions/39494631/gpg-failed-to-sign-the-data-fatal-failed-to-write-commit-object-git-2-10-0
GPG_TTY=$(tty)
export GPG_TTY

# z - Jump around
#. ~/Paull/_scripts/z.sh

# Base PATHs 
PATH="/usr/local/opt/ruby/bin:/Users/plucas/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/System/Cryptexes/App/usr/bin"

# Brew - March 17 2025
eval "$(/opt/homebrew/bin/brew shellenv)"

# PATH including local Ruby gems, ie Travis
export PATH="$HOME/.gem/ruby/3.0.0/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:$PATH"
# export PATH="$HOME/.gem/ruby/2.7.0/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/opt/ruby/bin:/Users/plucas/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"

# VS Code
export PATH="/Applications/Visual Studio Code.app/Contents/Resources/app/bin:$PATH"

# Cumulus CI / CCI
export PATH="/Users/plucas/.local/bin:$PATH"

# JAVA HOME
# export JAVA_HOME="/Library/Java/Home"

# Fix JAVA HOME for Maven - https://www.marcobehler.com/guides/mvn-clean-install-a-short-guide-to-maven
# 	- https://www.baeldung.com/maven-java-home-jdk-jre
#	- https://www.baeldung.com/java-home-on-windows-7-8-10-mac-os-x-linux
export JAVA_HOME=$(/usr/libexec/java_home)

# Testim - Q Brix environment variables
#export TESTIM_KEY=fu33yv5eylNj3eoNtz3P16Xn3z9m0vEkL3fmHX21AtivyCoobZ
#export TESTIM_PROJECT=ONsJOul8TCYXMjyySdp4


# Python installed by Brew
# https://mac.install.guide/python/path
export PATH="$(brew --prefix python@3.12)/libexec/bin:$PATH"
#export PATH="$(brew --prefix python@3.13)/libexec/bin:$PATH"
#export PATH="$(brew --prefix python)/libexec/bin:$PATH" # Will return the latest?



# added by travis gem
[ ! -s /Users/plucas/.travis/travis.sh ] || source /Users/plucas/.travis/travis.sh


[[ -f "$HOME/fig-export/dotfiles/dotfile.bash" ]] && source "$HOME/fig-export/dotfiles/dotfile.bash"

# Q post block. Keep at the bottom of this file.
[[ -f "${HOME}/Library/Application Support/amazon-q/shell/bashrc.post.bash" ]] && builtin source "${HOME}/Library/Application Support/amazon-q/shell/bashrc.post.bash"
